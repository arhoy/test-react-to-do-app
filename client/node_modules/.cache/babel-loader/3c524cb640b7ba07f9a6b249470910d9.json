{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\gitHubSamples\\\\test-react-to-do-app\\\\client\\\\src\\\\components\\\\landing\\\\Landing.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\n\nconst Landing = ({\n  isAuthenticated,\n  loading\n}) => {\n  if (loading) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  });\n  if (isAuthenticated) return React.createElement(Redirect, {\n    to: \"/todo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    className: \"Landing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Landing-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Fullstack \\\"ToDo\\\" App\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Fullstack task keeping App with Reacthooks and MongoDb Atlas\"), React.createElement(\"div\", {\n    className: \"Landing__auth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"Landing__button Landing__button-1\",\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \" Sign In \"), React.createElement(Link, {\n    className: \"Landing__button Landing__button-2\",\n    to: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \" Register \"))));\n};\n\nLanding.propTypes = {\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  loading: state.auth.loading\n});\n\nexport default connect(mapStateToProps)(Landing);","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\gitHubSamples\\test-react-to-do-app\\client\\src\\components\\landing\\Landing.js"],"names":["React","PropTypes","Link","Redirect","connect","Spinner","Landing","isAuthenticated","loading","propTypes","bool","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAAD,KAAkC;AAC9C,MAAIA,OAAJ,EAAc,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACd,MAAID,eAAJ,EAAsB,OAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAG,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACtB,SACI;AAAK,IAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAK,IAAA,SAAS,EAAG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFH,EAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAHH,EAIG;AAAK,IAAA,SAAS,EAAG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAG,mCAAlB;AAAsD,IAAA,EAAE,EAAG,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAG,mCAAlB;AAAsD,IAAA,EAAE,EAAG,WAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAJH,CADL,CADJ;AAeH,CAlBD;;AAqBAD,OAAO,CAACG,SAAR,GAAoB;AAChBF,EAAAA,eAAe,EAAEN,SAAS,CAACS;AADX,CAApB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BL,EAAAA,eAAe,EAAEK,KAAK,CAACC,IAAN,CAAWN,eADE;AAE9BC,EAAAA,OAAO,EAAEI,KAAK,CAACC,IAAN,CAAWL;AAFU,CAAL,CAA7B;;AAKA,eAAeJ,OAAO,CAAEO,eAAF,CAAP,CAA2BL,OAA3B,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst Landing = ({ isAuthenticated, loading }) => {\r\n    if( loading ) return <Spinner />\r\n    if( isAuthenticated ) return <Redirect to = \"/todo\"/> \r\n    return (\r\n        <div className = \"Landing\">\r\n             <div className = \"Landing-content\">\r\n             \r\n                <h1>Fullstack \"ToDo\" App</h1>\r\n                <p>Fullstack task keeping App with Reacthooks and MongoDb Atlas</p>\r\n                <div className = \"Landing__auth\">\r\n                    <Link className = \"Landing__button Landing__button-1\" to = \"/login\"> Sign In </Link>\r\n                    <Link className = \"Landing__button Landing__button-2\" to = \"/register\"> Register </Link>\r\n                </div>\r\n               \r\n             </div>\r\n   \r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nLanding.propTypes = {\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    loading: state.auth.loading\r\n})\r\n\r\nexport default connect( mapStateToProps )(Landing);"]},"metadata":{},"sourceType":"module"}
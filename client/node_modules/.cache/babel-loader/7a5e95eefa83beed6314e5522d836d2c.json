{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\gitHubSamples\\\\test-react-to-do-app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\gitHubSamples\\\\test-react-to-do-app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\gitHubSamples\\\\test-react-to-do-app\\\\client\\\\src\\\\components\\\\auth\\\\Register.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { connect } from 'react-redux';\nimport { register } from '../../actions/auth';\nimport Alert from '../layout/Alert';\n\nconst Register = ({\n  register,\n  isAuthenticated\n}) => {\n  const _useState = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const name = formData.name,\n        email = formData.email,\n        password = formData.password,\n        password2 = formData.password2;\n\n  const onChangeHandler = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmitHandler = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert('Password not matching!', 'danger');\n    } else {\n      register(name, email, password);\n    }\n  };\n\n  if (isAuthenticated) return React.createElement(Redirect, {\n    to: \"/todo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    className: \"Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Sign Up Here\"), React.createElement(Alert, {\n    customStyle: {\n      marginTop: '2rem',\n      'marginBottom': '-1rem',\n      borderRadius: '6px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: onSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group form-group--register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Your Name\",\n    onChange: onChangeHandler,\n    name: \"name\",\n    value: name,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group form-group--register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Your Email\",\n    onChange: onChangeHandler,\n    name: \"email\",\n    value: email,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group form-group--register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Your Password\",\n    onChange: onChangeHandler,\n    name: \"password\",\n    value: password,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group form-group--register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Confirm password\",\n    onChange: onChangeHandler,\n    name: \"password2\",\n    value: password2,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \" Register \")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \" Have an account? \", React.createElement(Link, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Sign In here \"), \" \"));\n};\n\nRegister.propTypes = {\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  register\n})(Register);","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\gitHubSamples\\test-react-to-do-app\\client\\src\\components\\auth\\Register.js"],"names":["React","useState","PropTypes","Link","Redirect","setAlert","connect","register","Alert","Register","isAuthenticated","name","email","password","password2","formData","setFormData","onChangeHandler","e","target","value","onSubmitHandler","preventDefault","marginTop","borderRadius","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { connect } from 'react-redux'\r\nimport { register } from '../../actions/auth';\r\nimport Alert from '../layout/Alert';\r\n\r\nconst Register = ({ register, isAuthenticated }) => {\r\n\r\n    const [ formData, setFormData ] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n\r\n    const { name, email, password, password2 } = formData;\r\n\r\n    const onChangeHandler = e => setFormData({\r\n        ...formData,\r\n        [ e.target.name ]:  e.target.value\r\n    })\r\n\r\n    const onSubmitHandler = async e => {\r\n        e.preventDefault();\r\n        if(password !== password2) {\r\n            setAlert('Password not matching!', 'danger');\r\n        } else {\r\n            register(name, email, password);\r\n        }\r\n     \r\n    }\r\n\r\n    if(isAuthenticated) return <Redirect to = \"/todo\" />\r\n\r\n    return (\r\n        <div className = \"Login\">\r\n        <h1>Sign Up Here</h1>\r\n        <Alert\r\n                customStyle = {{marginTop: '2rem', 'marginBottom': '-1rem', borderRadius: '6px'}}\r\n        />\r\n        <form\r\n            className = \"form\"\r\n            onSubmit = { onSubmitHandler }\r\n        >\r\n            <div className = \"form-group form-group--register\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder = \"Your Name\"\r\n                    onChange = { onChangeHandler }\r\n                    name = \"name\"\r\n                    value = { name }\r\n                    required\r\n                />\r\n            </div>\r\n\r\n            <div className = \"form-group form-group--register\">\r\n                <input \r\n                    type=\"email\"\r\n                    placeholder = \"Your Email\"\r\n                    onChange = { onChangeHandler }\r\n                    name = \"email\"\r\n                    value = { email }\r\n                    required\r\n                />\r\n            </div>\r\n\r\n            <div className = \"form-group form-group--register\">\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder = \"Your Password\"\r\n                    onChange = { onChangeHandler }\r\n                    name = \"password\"\r\n                    value = { password }\r\n                    required\r\n                />\r\n            </div>\r\n\r\n            <div className = \"form-group form-group--register\">\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder = \"Confirm password\"\r\n                    onChange = { onChangeHandler }\r\n                    name = \"password2\"\r\n                    value = { password2 }\r\n                    required\r\n                />\r\n            </div>\r\n         <button type = 'submit' className = 'btn btn-transparent'> Register </button>\r\n        </form>\r\n\r\n        <p> Have an account? <Link to = '/login' >Sign In here </Link> </p>\r\n    </div>\r\n    )\r\n}\r\n\r\nRegister.propTypes = {\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { register })(Register)\r\n"]},"metadata":{},"sourceType":"module"}
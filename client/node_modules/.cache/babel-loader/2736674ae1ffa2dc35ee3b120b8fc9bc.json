{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\gitHubSamples\\\\test-react-to-do-app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_TODOS, ADD_TODO, EDIT_TODO, CHANGE_TODO_STATUS, REMOVE_TODO, GET_TODO, LOGOUT } from '../actions/types';\nconst initialState = {\n  todos: [],\n  currentTodo: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case ADD_TODO:\n      return _objectSpread({}, state, {\n        todos: [payload, ...state.todos],\n        loading: false\n      });\n\n    case GET_TODOS:\n      return _objectSpread({}, state, {\n        todos: payload,\n        loading: false\n      });\n\n    case GET_TODO:\n      return _objectSpread({}, state, {\n        currentTodo: payload\n      });\n\n    case REMOVE_TODO:\n      return _objectSpread({}, state, {\n        todos: state.todos.filter(todo => todo._id !== payload),\n        loading: false\n      });\n\n    case EDIT_TODO:\n      return _objectSpread({}, state, {\n        todos: state.todos.map(todo => todo._id === state.currentTodo._id ? _objectSpread({}, todo, {\n          text: payload.text\n        }) : todo),\n        currentTodo: null\n      });\n\n    case CHANGE_TODO_STATUS:\n      return _objectSpread({}, state, {\n        todos: state.todos.map(todo => todo._id === payload._id ? _objectSpread({}, todo, {\n          completed: payload.completed,\n          status: payload.status\n        }) : todo)\n      });\n\n    case LOGOUT:\n      return _objectSpread({}, state, {\n        todos: [],\n        currentTodo: null,\n        loading: false,\n        error: {}\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\gitHubSamples\\test-react-to-do-app\\client\\src\\reducers\\todo.js"],"names":["GET_TODOS","ADD_TODO","EDIT_TODO","CHANGE_TODO_STATUS","REMOVE_TODO","GET_TODO","LOGOUT","initialState","todos","currentTodo","loading","error","state","action","type","payload","filter","todo","_id","map","text","completed","status"],"mappings":";AAAA,SACIA,SADJ,EAEIC,QAFJ,EAGIC,SAHJ,EAIIC,kBAJJ,EAKIC,WALJ,EAMIC,QANJ,EAOIC,MAPJ,QAQO,kBARP;AAUA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,WAAW,EAAE,IAFI;AAGjBC,EAAAA,OAAO,EAAC,IAHS;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;AAOA,eAAe,UAAWC,KAAK,GAAGL,YAAnB,EAAiCM,MAAjC,EAA0C;AAAA,QAC7CC,IAD6C,GAC3BD,MAD2B,CAC7CC,IAD6C;AAAA,QACvCC,OADuC,GAC3BF,MAD2B,CACvCE,OADuC;;AAGrD,UAAQD,IAAR;AACI,SAAKb,QAAL;AACI,+BACOW,KADP;AAEIJ,QAAAA,KAAK,EAAE,CAAEO,OAAF,EAAW,GAAGH,KAAK,CAACJ,KAApB,CAFX;AAGIE,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKV,SAAL;AACI,+BACOY,KADP;AAEIJ,QAAAA,KAAK,EAAEO,OAFX;AAGIL,QAAAA,OAAO,EAAE;AAHb;;AAMJ,SAAKL,QAAL;AACI,+BACOO,KADP;AAEIH,QAAAA,WAAW,EAAEM;AAFjB;;AAKJ,SAAKX,WAAL;AACI,+BACOQ,KADP;AAEIJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAoBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaH,OAAzC,CAFX;AAGIL,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKR,SAAL;AACI,+BACOU,KADP;AAEIJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYW,GAAZ,CAAiBF,IAAI,IACxBA,IAAI,CAACC,GAAL,KAAaN,KAAK,CAACH,WAAN,CAAkBS,GAA/B,qBAA0CD,IAA1C;AAAgDG,UAAAA,IAAI,EAAEL,OAAO,CAACK;AAA9D,aAAuEH,IADpE,CAFX;AAKIR,QAAAA,WAAW,EAAC;AALhB;;AAOJ,SAAKN,kBAAL;AACI,+BACOS,KADP;AAEIJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYW,GAAZ,CAAiBF,IAAI,IACxBA,IAAI,CAACC,GAAL,KAAaH,OAAO,CAACG,GAArB,qBAA+BD,IAA/B;AAAqCI,UAAAA,SAAS,EAAEN,OAAO,CAACM,SAAxD;AAAmEC,UAAAA,MAAM,EAAEP,OAAO,CAACO;AAAnF,aAA8FL,IAD3F;AAFX;;AAMJ,SAAKX,MAAL;AACI,+BACOM,KADP;AAEIJ,QAAAA,KAAK,EAAC,EAFV;AAGIC,QAAAA,WAAW,EAAC,IAHhB;AAIIC,QAAAA,OAAO,EAAC,KAJZ;AAKIC,QAAAA,KAAK,EAAE;AALX;;AAQJ;AACI,aAAOC,KAAP;AAnDR;AAsDH","sourcesContent":["import {\r\n    GET_TODOS,\r\n    ADD_TODO,\r\n    EDIT_TODO,\r\n    CHANGE_TODO_STATUS,\r\n    REMOVE_TODO,\r\n    GET_TODO,\r\n    LOGOUT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    todos: [],\r\n    currentTodo: null,\r\n    loading:true,\r\n    error: {}\r\n}\r\n\r\nexport default function ( state = initialState, action ) {\r\n    const { type, payload } = action;\r\n\r\n    switch( type ) { \r\n        case ADD_TODO:\r\n            return {\r\n                ...state,\r\n                todos: [ payload, ...state.todos ],\r\n                loading: false\r\n            };\r\n        case GET_TODOS:\r\n            return {\r\n                ...state,\r\n                todos: payload,\r\n                loading: false\r\n            };\r\n        \r\n        case GET_TODO:\r\n            return {\r\n                ...state,\r\n                currentTodo: payload\r\n            };\r\n\r\n        case REMOVE_TODO:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.filter( todo => todo._id !== payload ),\r\n                loading: false\r\n            }\r\n        case EDIT_TODO:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map( todo => \r\n                    todo._id === state.currentTodo._id ? { ...todo, text: payload.text } : todo\r\n                ),\r\n                currentTodo:null\r\n            }\r\n        case CHANGE_TODO_STATUS:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map( todo => \r\n                    todo._id === payload._id ? {...todo, completed: payload.completed, status: payload.status } : todo\r\n                )\r\n            }\r\n        case LOGOUT:\r\n            return {\r\n                ...state,\r\n                todos:[],\r\n                currentTodo:null,\r\n                loading:false,\r\n                error: {}\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}
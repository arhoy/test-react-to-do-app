{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\gitHubSamples\\\\test-react-to-do-app\\\\client\\\\src\\\\components\\\\todo\\\\Todo.js\";\n// highest level Todo file\nimport React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TodoHeader from './TodoHeader';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\nimport { getTodos, addTodo, changeTodoStatus } from '../../actions/todo';\nimport Spinner from '../layout/Spinner';\n\nconst Todo = ({\n  auth,\n  getTodos,\n  addTodo,\n  changeTodoStatus,\n  todo: {\n    todos,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getTodos();\n  }, [getTodos, addTodo, changeTodoStatus, auth]);\n  const inputRef = useRef();\n  return loading || todos === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"Todo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(TodoHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(TodoForm, {\n    inputRef: inputRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(TodoList, {\n    inputRef: inputRef,\n    todos: todos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n};\n\nTodo.propTypes = {\n  getTodos: PropTypes.func.isRequired,\n  addTodo: PropTypes.func.isRequired,\n  changeTodoStatus: PropTypes.func.isRequired,\n  todo: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  todo: state.todo,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getTodos,\n  addTodo,\n  changeTodoStatus\n})(Todo);","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\gitHubSamples\\test-react-to-do-app\\client\\src\\components\\todo\\Todo.js"],"names":["React","useEffect","useRef","PropTypes","connect","TodoHeader","TodoForm","TodoList","getTodos","addTodo","changeTodoStatus","Spinner","Todo","auth","todo","todos","loading","inputRef","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,gBAA5B,QAAoD,oBAApD;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQL,EAAAA,QAAR;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA,gBAA3B;AAA6CI,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAnD,CAAD,KAA6E;AAEtFf,EAAAA,SAAS,CAAE,MAAK;AACZO,IAAAA,QAAQ;AACX,GAFQ,EAEN,CAACA,QAAD,EAAWC,OAAX,EAAoBC,gBAApB,EAAsCG,IAAtC,CAFM,CAAT;AAIA,QAAMI,QAAQ,GAAGf,MAAM,EAAvB;AAEA,SAAOc,OAAO,IAAID,KAAK,KAAK,IAArB,GAA6B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7B,GACJ;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAIE,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAIA,QAAtB;AAAgC,IAAA,KAAK,EAAIF,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADH;AAOH,CAfD;;AAkBAH,IAAI,CAACM,SAAL,GAAiB;AACbV,EAAAA,QAAQ,EAAEL,SAAS,CAACgB,IAAV,CAAeC,UADZ;AAEbX,EAAAA,OAAO,EAAEN,SAAS,CAACgB,IAAV,CAAeC,UAFX;AAGbV,EAAAA,gBAAgB,EAAEP,SAAS,CAACgB,IAAV,CAAeC,UAHpB;AAIbN,EAAAA,IAAI,EAAEX,SAAS,CAACkB,MAAV,CAAiBD;AAJV,CAAjB;;AAOA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BT,EAAAA,IAAI,EAAES,KAAK,CAACT,IADkB;AAE9BD,EAAAA,IAAI,EAAEU,KAAK,CAACV;AAFkB,CAAL,CAA7B;;AAIA,eAAeT,OAAO,CAAEkB,eAAF,EAAmB;AAAEd,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAnB,CAAP,CAAoEE,IAApE,CAAf","sourcesContent":["// highest level Todo file\r\n\r\nimport React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport TodoHeader from './TodoHeader';\r\nimport TodoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\nimport { getTodos, addTodo, changeTodoStatus } from '../../actions/todo';\r\nimport Spinner from '../layout/Spinner';\r\n\r\n\r\nconst Todo = ({ auth, getTodos, addTodo, changeTodoStatus, todo: { todos, loading } }) => {\r\n\r\n    useEffect( ()=> {\r\n        getTodos();\r\n    }, [getTodos, addTodo, changeTodoStatus, auth]);\r\n\r\n    const inputRef = useRef();\r\n\r\n    return loading || todos === null ?  <Spinner/> : (\r\n       <div className = \"Todo\" >\r\n           <TodoHeader/>\r\n           <TodoForm inputRef = {inputRef} />\r\n           <TodoList inputRef = {inputRef} todos = {todos} />\r\n       </div>\r\n    );\r\n};\r\n\r\n\r\nTodo.propTypes = {\r\n    getTodos: PropTypes.func.isRequired,\r\n    addTodo: PropTypes.func.isRequired,\r\n    changeTodoStatus: PropTypes.func.isRequired,\r\n    todo: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    todo: state.todo,\r\n    auth: state.auth\r\n})\r\nexport default connect( mapStateToProps, { getTodos, addTodo, changeTodoStatus } )(Todo);"]},"metadata":{},"sourceType":"module"}